
var tag_list=document.querySelectorAll(".right_col>ul>li");
var content_list=document.querySelectorAll(".x_panel>.col-md-12");
for (var i=0;i<tag_list.length;i++){
    tag_list[i].setAttribute("index",i);
    tag_list[i].onclick=function () {
        for(var i=0;i<tag_list.length;i++){
            tag_list[i].className="";
        }
        this.className="active";
        var current_index=this.getAttribute('index');
        for(var j=0;j<content_list.length;j++){
            if(current_index==j){
                content_list[j].style.display="block";
                select_views(j);
            }
            else {
                content_list[j].style.display="none";
            }
        }
    }
}

//资产详情页的tag切换功能
function select_views(num){
    switch(num)
		{
			case 0:;break;
			case 1:asset_ports_scan();break;
			case 2:asset_process();break;
			case 3:;break;
			case 4:asset_soft();break;
			case 5:asset_performance();break;
			case 6:;break;
			case 7:asset_boot();break;
			default:console.log("no data");
				}
}

//详情页
//function asset_detail(){
//$.ajax({
//    cache: true,
//    type: "GET",
//    url: "/asset/asset_detail/",
//    async: true,
//    error: function (){
//        console.log('请求系统详情信息失败')
//    },
//    success function (request){
//
//    },
//
//})
//}

//端口扫描
function asset_ports_scan(){
    $.ajax({
        cache: true,
        type: "GET",
        url: "/asset/asset_ports_scan/",
        async: true,
        error: function () {
            console.log('请求端口扫描失败')
        },
        success: function (request) {
            var dataList = JSON.parse(request);
            var type
            if (dataList.length) {
                var trHtml = '<tr>' +
                    '<th>端口号</th>' +
                    '<th>网络协议</th>' +
                     '<th>对应进程</th>'+
                     '<th>绑定IP</th>';
                for (var i = 0; i < dataList.length; i++) {
                    if(dataList[i]['type']==1){type = 'TCP'}else{type = 'UDP'}
                    trHtml = trHtml + '<tr>' +
                        '<td>' + dataList[i]['port'] + '</td>' +
                        '<td>' + type + '</td>' +
                        '<td>' + dataList[i]['proc'] + '</td>' +
                        '<td>' + dataList[i]['ip'] + '</td>' +
                        '</tr>'
                }
                trHtml = trHtml + '</tr>'
                $("#ports_scan").html(trHtml);
            }
        }
    });
}

//获取进程
function asset_process(){
    $.ajax({
        cache: true,
        type: "GET",
        url: "/asset/asset_process/",
        async: true,
        error: function () {
            console.log('请求主机进程失败')
        },
        success: function (request) {
            var dataList = JSON.parse(request);
            if (dataList.length) {
                var trHtml = '<tr>' +
                    '<th>PID</th>' +
                    '<th>名称</th>' +
                     '<th>状态</th>'+
                     '<th>操作</th>';
                for (var i = 0; i < dataList.length; i++) {
                    trHtml = trHtml + '<tr>' +
                        '<td>' + dataList[i]['pid'] + '</td>' +
                        '<td>' + dataList[i]['name'] + '</td>' +
                        '<td>' + dataList[i]['status'] + '</td>' +
                        '<td>' + '<a href="/asset/asset_opt?pid='+ dataList[i]['pid'] + '&opt=2">结束进程</a>' + '</td>' +
                        '</tr>'
                }
                trHtml = trHtml + '</tr>'
                $("#process_page").html(trHtml);
            }
        }
    });
}

//获取软件信息
function asset_soft(){
    $.ajax({
        cache: false,
        type: "GET",
        url: "/asset/asset_soft/",
        async: true,
        error: function () {
            window.alert('请求主机启动项失败')
        },
        success: function (request) {
            var dataList = JSON.parse(request);
            if (dataList.length) {
                var trHtml = '<tr>' +
                    '<th>软件名称</th>' +
                    '<th>厂商</th>' +
                    '<th>版本</th>' +
                    '<th>安装日期</th>' +
                    '<tr>';
                for (var i = 0; i < dataList.length; i++) {
                    trHtml = trHtml +
                        '<tr>' +
                        '<td>' + dataList[i]['name'] + '</td>' +
                        '<td>' + dataList[i]['publisher'] + '</td>' +
                        '<td>' + dataList[i]['version'] + '</td>' +
                        '<td>' + dataList[i]['data'] + '</td>' +
                        '</tr>'
                }
                $("#soft_info").html(trHtml);
            }
        }
    });
}

//获取系统资源占用率
function asset_performance(){
    //定义函数
    var performance={
        cache: false,
        type: "GET",
        url: "/asset/cpu_percent/",
        async: true,
        error: function () {
            window.alert('请求资源占用率失败')
        },
        success: function (request) {
            var date = new Date();
            var year = date.getFullYear();
            var month = date.getMonth() + 1;
            var day = date.getDate();
            var hour = date.getHours();
            var minute = date.getMinutes();
            var second = date.getSeconds();
            var now = year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second;
            document.write("成功惹")

            var now_date = new Date()
            var dataList = JSON.parse(request);
            // document.write("系统资源占用率",dataList);
            trHtml = '<div id="cpupercent" style="height: 250px"></div>'
            // var dateList = new Array();
            //  // document.write(dataList.length)
            // for (var i = 0; i < dataList.length; i++) {
            //     dateList[i] = now;
            // }
            // document.write(dateList);
            //创建一个数组，包含未来十秒的时间戳
            var dateList = [];
            for (var i = 0; i < 10; i++) {
                dateList.push(now_date.getTime() + i * 1000);
            }
            console.log("dateList")
            $("#performance").html(trHtml);
            new Morris.Area({
                    element: 'cpupercent',
                    data: [
                        { date: dateList[0], value: dataList[0] },
                        { date: dateList[1], value: dataList[1] },
                        { date: dateList[2], value: dataList[2] },
                        { date: dateList[3], value: dataList[3] },
                        { date: dateList[4], value: dataList[4] },
                        { date: dateList[5], value: dataList[5] },
                        { date: dateList[6], value: dataList[6] },
                        { date: dateList[7], value: dataList[7] },
                        { date: dateList[8], value: dataList[8] },
                        { date: dateList[9], value: dataList[9] }
                     ],
                    ymax:'100',
                    ymin:'0',
                    xkey: 'date',
                    ykeys: ['value'],
                    xlabels: "1sec",
                    labels:['value'],
                    hideHover:'auto',
                    fillOpacity:'1.0',
                    pointSize:'0',
                    smooth:true,
                    });
             setTimeout(function(){$.ajax(performance);},1000);
             //每隔一秒获取一次当前时间，生成一个数组
             // var date = new Date();
             // var year = date.getFullYear();
             // var month = date.getMonth()+1;
             // var day = date.getDate();
             // var hour = date.getHours();
             // var minute = date.getMinutes();
             // var second = date.getSeconds();
             // var now_date = year+'-'+month+'-'+day+' '+hour+':'+minute+':'+second;
             // var dataList = [now_date,dataList[0],dataList[1],dataList[2],dataList[3],dataList[4],dataList[5],dataList[6],dataList[7],dataList[8],dataList[9]];



                }
        };
    $.ajax(performance);

}




//获取启动项
function asset_boot(){
    $.ajax({
        cache: true,
        type: "GET",
        url: "/asset/asset_boot/",
        async: true,
        error: function () {
            window.alert('请求主机启动项失败')
        },
        success: function (request) {
            var dataList = JSON.parse(request);
            if (dataList.length) {
                var trHtml = '<tr>' +
                    '<th>名称</th>' +
                    '<th>路径</th>' +
                    '<tr>' ;
                for (var i = 0; i < dataList.length; i++) {
                    trHtml = trHtml + '<tr>' +
                        '<td>' + dataList[i]['name'] + '</td>' +
                        '<td>' + dataList[i]['path'] + '</td>' +
                        + '</tr>'
                }
                $("#boot_detail").html(trHtml);
            }
        }
    });
}


