import psutil
import datetime
import os
import socket
import uuid
import platform
import wmi
import getpass

dic = {}
w = wmi.WMI()


# 主机名
def host_name():
    hostname = socket.gethostname()  # 获取主机名
    user_name = getpass.getuser()  # 获取当前用户名
    list = [hostname, user_name]
    return list


# 网络信息
def net_info():
    ip = socket.gethostbyname(socket.gethostname())  # 获取本机ip地址
    mac = uuid.UUID(int=uuid.getnode()).hex[-12:]
    mac = "-".join([mac[e:e + 2] for e in range(0, 11, 2)])  # 获取本机mac地址
    list = [ip, mac]
    return list


# 环境信息
def environmental_infor():
    operating_sys = platform.system()  # 获取操作系统
    sys_bit = platform.architecture()  # 获取操作系统位数
    processor = platform.processor()  # 获取处理器
    Disk='1'
    for BIOS in w.Win32_BIOS():  # 获取主板型号
        board = BIOS.SerialNumber

    o = psutil.disk_usage("/")  # 获取内存大小
    memory = str(int(o.total / (1024.0 * 1024.0 * 1024.0))) + "G"

    for disk in w.Win32_DiskDrive(InterfaceType="IDE"):  # 获取磁盘名称
        Disk = disk.Caption

    for xk in w.Win32_VideoController():  # 获取显卡名称
        graphics_card = xk.name

    list = [operating_sys, sys_bit, processor, board, memory, Disk, graphics_card]

    return list


# 其他信息
def other_info():
    # 系统启动时间
    start_time = datetime.datetime.fromtimestamp(psutil.boot_time()).strftime("%Y-%m-%d %H:%M:%S")
    return start_time


def get_info():
    dic = {'net': {'ip': net_info()[0],
                   'mac': net_info()[1], },
           'host_info': {
               '主机名': host_name()[0],
               '使用者': host_name()[1],
               '操作系统': environmental_infor()[0],
               '位数': environmental_infor()[1],
               '处理器': environmental_infor()[2],
               '主板名称': environmental_infor()[3],
               '内存': environmental_infor()[4],
               '磁盘名称': environmental_infor()[5],
               '显卡名称': environmental_infor()[6],
               "系统启动时间:": other_info(), }
           }
    return dic


def shutdown():
    os.system("shutdown -s -t  {:} ".format(0))
    return


def restart():
    os.system("shutdown -r -t {:} ".format(0))
    return
